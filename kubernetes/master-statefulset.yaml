apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: master
  labels:
    app: pytorch-orchestrator
    role: master
spec:
  serviceName: "master-service"
  replicas: 1
  selector:
    matchLabels:
      app: pytorch-orchestrator
      role: master
  template:
    metadata:
      labels:
        app: pytorch-orchestrator
        role: master
    spec:
      # Add the secret to the pod spec
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: pytorch
        # 1. Use the full image path from the remote registry
        image: ghcr.io/vincentmssx/pytorch-orchestrator:latest
        # 2. Change the pull policy to 'Always'
        imagePullPolicy: Always
        command: ["/bin/sh", "-c"]
        args:
        - |
          WORLD_SIZE=$((1 + $WORKER_REPLICAS))
          echo "Master starting..."
          echo "WORLD_SIZE: ${WORLD_SIZE}"
          echo "RANK: 0"
          export WORLD_SIZE=${WORLD_SIZE}
          export RANK=0
        ports:
        - containerPort: 12345
          name: pytorch-tcp
        env:
        - name: MASTER_ADDR
          value: "master-service"
        - name: WORKER_REPLICAS
          valueFrom:
            configMapKeyRef:
              name: pytorch-config
              key: WORKER_REPLICAS
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        livenessProbe:
          exec:
            command:
            - pidof
            - python
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pidof
            - python
          initialDelaySeconds: 10
          periodSeconds: 5