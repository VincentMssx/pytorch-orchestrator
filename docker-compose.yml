services:
  # ---------------------------------------------------------------------------
  # Master Service (Rank 0)
  # Acts as the rendezvous backend for the Torch Distributed job.
  # All other workers connect to this service to join the training group.
  # ---------------------------------------------------------------------------
  master:
    build: .
    image: pytorch-orchestrator-elastic:latest
    container_name: master_worker # Static hostname for the rendezvous endpoint
    volumes:
      - ./checkpoints:/app/checkpoints
    # Command arguments for torchrun.
    # --nnodes: The number of nodes in the job (min:max).
    # --nproc_per_node: Number of processes per node.
    # --rdzv_backend: Rendezvous backend (c10d for TCP).
    # --rdzv_id: A unique ID for the training job.
    # --rdzv_endpoint: The endpoint of the master worker for rendezvous.
    # Arguments after worker.py are passed to the script.
    command:
      - "--nnodes=1:4"
      - "--nproc_per_node=1"
      - "--rdzv_backend=c10d"
      - "--rdzv_id=${COMPOSE_PROJECT_NAME:-pytorch-job}"
      - "--rdzv_endpoint=master_worker:29400"
      - "worker.py"
      - "--epochs=50"
      - "--steps=200"
      - "--checkpoint_interval=100"
      - "--checkpoint_dir=/app/checkpoints"

  # ---------------------------------------------------------------------------
  # Worker Service
  # Blueprint for scalable training workers.
  # Scale this service to add more nodes to the training job.
  # Example: `docker-compose up --scale worker=3` for a 4-node job.
  # ---------------------------------------------------------------------------
  worker:
    build: .
    image: pytorch-orchestrator-elastic:latest
    depends_on:
      - master
    volumes:
      - ./checkpoints:/app/checkpoints
    command:
      - "--nnodes=1:4"
      - "--nproc_per_node=1"
      - "--rdzv_backend=c10d"
      - "--rdzv_id=${COMPOSE_PROJECT_NAME:-pytorch-job}"
      - "--rdzv_endpoint=master_worker:29400"
      - "worker.py"
      - "--epochs=50"
      - "--steps=200"
      - "--checkpoint_interval=100"
      - "--checkpoint_dir=/app/checkpoints"

networks:
  default:
    driver: bridge
